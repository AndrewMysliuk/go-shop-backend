basePath: /
definitions:
  domain.CreateProductInput:
    properties:
      category:
        type: string
      description:
        type: string
      price:
        type: integer
      sale:
        type: integer
      sale_old_price:
        type: integer
      subtype:
        type: string
      title:
        type: string
      type:
        type: string
    required:
    - category
    - price
    - subtype
    - title
    - type
    type: object
  domain.ProductsList:
    properties:
      category:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      image:
        type: string
      price:
        type: integer
      sale:
        type: integer
      sale_old_price:
        type: integer
      subtype:
        type: string
      title:
        type: string
      type:
        type: string
    required:
    - category
    - price
    - subtype
    - title
    - type
    type: object
  domain.UpdateProductInput:
    properties:
      category:
        type: string
      description:
        type: string
      price:
        type: integer
      sale:
        type: integer
      sale_old_price:
        type: integer
      subtype:
        type: string
      title:
        type: string
      type:
        type: string
    required:
    - category
    - price
    - subtype
    - title
    - type
    type: object
  domain.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        minLength: 1
        type: string
      password:
        minLength: 5
        type: string
      phone:
        type: string
      role:
        type: string
      surname:
        minLength: 1
        type: string
    required:
    - email
    - name
    - password
    - phone
    - role
    - surname
    type: object
  domain.UserSignIn:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  domain.UserSignUp:
    properties:
      email:
        type: string
      name:
        minLength: 1
        type: string
      password:
        minLength: 5
        type: string
      phone:
        type: string
      role:
        type: string
      surname:
        minLength: 1
        type: string
    required:
    - email
    - name
    - password
    - phone
    - role
    - surname
    type: object
  handler.UploadedImageURL:
    properties:
      image_url:
        type: string
    type: object
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  handler.getAllProductsListsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.ProductsList'
        type: array
    type: object
  handler.getCreationId:
    properties:
      id:
        type: string
    type: object
  handler.getProductResponse:
    properties:
      data:
        $ref: '#/definitions/domain.ProductsList'
    type: object
  handler.getUserToken:
    properties:
      access_token:
        type: string
    type: object
  handler.statusResponse:
    properties:
      status:
        type: string
    type: object
host: 159.89.235.180:3000
info:
  contact: {}
  description: API for frontend cliend
  title: CRUD API Go Shop Backend
  version: "1.0"
paths:
  /api/file/upload:
    post:
      consumes:
      - application/json
      description: upload image
      operationId: file-upload-image
      parameters:
      - description: productId
        in: formData
        name: productId
        required: true
        type: string
      - description: file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UploadedImageURL'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Upload image
      tags:
      - Upload image
  /api/products/:
    get:
      consumes:
      - application/json
      description: get products list
      operationId: get-products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.getAllProductsListsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Get Products List
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: create product
      operationId: create-product
      parameters:
      - description: Product info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.CreateProductInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.getCreationId'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Product
      tags:
      - Product
  /api/products/{id}:
    delete:
      consumes:
      - application/json
      description: delete product by id
      operationId: delete-product-by-id
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Product
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: get product by id
      operationId: get-product-by-id
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.getProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Get Product By ID
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: update product by id
      operationId: update-product-by-id
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Product info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateProductInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Product
      tags:
      - Product
  /auth/get-me:
    get:
      consumes:
      - application/json
      description: user get me
      operationId: get-me
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetMe
      tags:
      - Auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: user sign-in
      operationId: sign-in
      parameters:
      - description: User login
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.UserSignIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.getUserToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignIn
      tags:
      - Auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: user sign-up
      operationId: sign-up
      parameters:
      - description: User signup
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.UserSignUp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.getCreationId'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignUp
      tags:
      - Auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
